Class GravitySuitPickup : CustomInventory
{
	Default
	{
	//$Category Metroid
		Inventory.PickupMessage "";
		Inventory.PickupSound "you_are_under_arrest_for_intent_to_enjoy";
		+INVENTORY.INVBAR;
		+INVENTORY.UNDROPPABLE;
		+INVENTORY.FANCYPICKUPSOUND;
		+Inventory.AUTOACTIVATE;
		+DONTGIB;
		+NOGRAVITY;
		+DONTGIB;
		+SHOOTABLE;
		+DONTTHRUST;
		Scale 0.50;
		DamageFactor "Slime", 0;
		DamageFactor "Lava", 0;
		DamageFactor "Fire", 0;
		DamageFactor "Normal", 0.50;
	
		Tag "Gravity Suit";
    }
	
    States
    {
		
		Spawn:
			TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594,57,0,0) == 1, "MissileTankTime");
			GSPK AABBBCCCDD 1 BRIGHT;
			GSPK DEEEFFFGGGHHH 1;
			Loop;

		MissileTankTime:
			TNT1 A 0;
			TNT1 A 0 A_SpawnItemEx("MissileTankPickup",0,0,0,0,0,0,0,32);
			Stop;

		Pickup:
			TNT1 A 0 A_JumpIfInventory("GravitySuitAcquired", 1, "Nope");
			TNT1 A 0 ACS_ExecuteWithResult(594, 20, 29);
			TNT1 A 0 A_TakeInventory("IHateHeat", 1);
			TNT1 A 0 A_GiveInventory("GravitySuitAcquired", 1);
			TNT1 A 0 A_GiveInventory("GravityShield", 1);
			TNT1 A 1 A_SetBlend("Blue", 0.5, 5);
			TNT1 A 0;
			Stop;
			
		Nope:
			TNT1 A 0;
			Fail;
    }
}


Class GravityShield : PowerProtection 
{
	Default
	{
		Inventory.Amount 0;
		+INVENTORY.AUTOACTIVATE;
		+INVENTORY.ALWAYSPICKUP;
		+INVENTORY.PERSISTENTPOWER;
		PowerUp.Duration 0x7FFFFFFF;
		DamageFactor "Slime", 0;
		DamageFactor "Lava", 0;
		DamageFactor "Normal", 0.70;
		DamageFactor "Fire", 0;
	}
}
