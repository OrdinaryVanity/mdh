Class PowerBeam : MDOBeam
{	
	bool missilesOn;
	int missileCooldown;
	
	enum PBLayers // OH SHIT SON WE GOT PSPRITES UP IN THIS B
	{
		PSP_MDOChargeParticles = -12,
		PSP_MDOCharge = -11,
		PSP_MDOFlash = -10,
		PSP_MDOHLights = 10
	}
	
	Default
	{
		Obituary "%k shot %o a lot.";
		Inventory.PickupMessage "Got the Power Beam!";
		Weapon.SelectionOrder 3000;  
		Weapon.SlotNumber 1;
		Inventory.Icon "WEAPPWBM";
	}
	
    States
	{
      Spawn:
        MGUN A -1;
		TNT1 A 0 {
			invoker.missileCooldown = 0;
		}
        Stop;

      Ready:
        TNT1 A 0 ACS_ExecuteWithResult(476, 1);
		TNT1 A 0 A_SetCrosshair(9);
		TNT1 A 0 A_JumpIf(invoker.missilesOn, "ReadyMissile");
		Goto Ready2;
		
	  Ready2:
		TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594, 28, 0), "Missile");
		TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594, 28, 1), "SuperMissile");
		TNT1 A 0 A_JumpIfInventory("IsShinesparking",1,"ShineBright");
		TNT1 A 0 A_JumpIfInventory("SpeedBoosterActive", 1,"D_RUNNIN");
		PBEM A 1 A_WeaponReady;
		Goto Ready;
	
	  ReadyMissile:
		TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594, 28, 0), "Missile");
		TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594, 28, 1), "SuperMissile");
		TNT1 A 0 A_JumpIfInventory("IsShinesparking",1,"ShineBright");
		TNT1 A 0 A_JumpIfInventory("SpeedBoosterActive", 1,"D_RUNNIN");
		MLID A 0 {
			if(invoker.missileCooldown < 1)	//Check missile cooldown and play
			{								//the missile transition back to arm cannon animation
				invoker.missilesOn = false;
				return ResolveState("MissileFromTrans");
			}
			else
			{
				invoker.missileCooldown--;
				return ResolveState(null);
			}
		}
		MLID A 1 A_WeaponReady;
		Goto Ready;
			
	  Select:
        TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_Raise;
        PBEM A 1 A_Raise;
        Loop;
		
	  Deselect:
        PBEM A 0 ACS_ExecuteWithResult(476, 0);
        TNT1 A 0 A_StartSound("beam/deselect",5);
		TNT1 A 0 {
			invoker.missileCooldown = 0; //Override missile transition timer since we're firing normally
			invoker.missilesOn = false;  //and don't need the animation to play
			}
	  Deselect2:
	    PBEM RSTUVW 1 A_WeaponReady(WRF_NOFIRE | WRF_NOSWITCH);
        TNT1 A 0 A_JumpIfHealthLower(1, "DeadLower");
        XBEM A 5 A_WeaponReady(WRF_NOFIRE | WRF_NOSWITCH);
        TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_Lower;
        XBEM A 0 A_Lower;
        Loop;

      DeadLower:
        XBEM A 1 A_Lower;
        Loop;
		
      Fire:
        PBEM A 0 ACS_ExecuteWithResult(476, 0);
        TNT1 A 0 A_JumpIfInventory("IceBeamChilled",1,"FireChilled");
        TNT1 A 0 A_StartSound("pbeam/fire", CHAN_WEAPON);
        TNT1 A 0 A_Recoil(0.05);
        TNT1 A 0 A_FireProjectile("PowerBolt",random(20,200)/100.00,0,12,0,0,random(20,50)/100.00);
		TNT1 A 0 {
			invoker.missileCooldown = 0; //Override missile transition timer since we're firing normally
			invoker.missilesOn = false;  //and don't need the animation to play
			}
        Goto FireFinish;

	  MDOFlash:
        PBMF ABCD 1 BRIGHT;
        Stop;
		
	  MDOHighlghts: //WIP
		TNT1 A 0;
		Stop;
	  
	  FireFinish:
        TNT1 A 0 A_AlertMonsters;
        TNT1 A 0 A_Light1;
        PBFI A 1 {
			A_Overlay(PSP_MDOFlash, "MDOFlash");
			}
		PBFI B 2  {
			A_OverlayOffset(PSP_MDOFlash, 0, 2, WOF_ADD);
			A_WeaponOffset(0, 8, WOF_ADD);
			A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOSWITCH);
			}
        TNT1 A 0 A_Light0;
        PBFI C 3  {
			A_OverlayOffset(PSP_MDOFlash, 1, 10, WOF_ADD);
			A_WeaponOffset(2, 20, WOF_ADD);
			A_WeaponReady(WRF_NOSWITCH);
			}
        TNT1 A 0 A_Light0;
        PBFI D 2  {
			A_OverlayOffset(PSP_MDOFlash, 0, 1, WOF_ADD);
			A_WeaponOffset(0, 16, WOF_ADD);
			A_WeaponReady(WRF_NOSWITCH);
			}
		PBFI E 2 {
			A_WeaponOffset(0, -2, WOF_ADD);
			A_WeaponReady(WRF_NOSWITCH);
			}
        PBFI F 2 {
			A_WeaponOffset(0, 32, WOF_INTERPOLATE);
			A_WeaponReady(WRF_NOSWITCH);
			}
		TNT1 A 0 A_JumpIfInventory("ChargeBeamAcquired", 1, "PreHold");
        Goto Ready;
		
	  PreHold:
		TNT1 A 0 A_Refire;
		Goto Ready;

      FireChilled:
        TNT1 A 0 A_StartSound("pbeam/fire", CHAN_WEAPON);
        TNT1 A 0 A_Recoil(0.05);
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"ChilledCoop");
        TNT1 A 0 A_FireProjectile("PowerBolt",random(-75,75)/100.00,0,0,-2,0,random(-50,50)/100.00);
        Goto ChilledFinish;

      ChilledCoop:
        TNT1 A 0 A_FireProjectile("PowerBoltCoop",random(-75,75)/100.00,0,0,-2,0,random(-50,50)/100.00);
	  ChilledFinish:
        TNT1 A 0 A_AlertMonsters;
        TNT1 A 0 A_Light2;
        PBFI B 1 BRIGHT A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOSWITCH);
        TNT1 A 0 A_Light1;
        PBFI C 2 BRIGHT A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOSWITCH);
        TNT1 A 0 A_Light0;
        PBFI D 2 BRIGHT A_WeaponReady(WRF_NOSWITCH);
        PBFI BBBBAA 2 A_WeaponReady(WRF_NOSWITCH);
        PBFI A 6 A_WeaponReady(WRF_NOSWITCH);
        TNT1 A 0 A_Refire;
        Goto Ready;

      Hold:
        TNT1 A 0 A_JumpIfInventory("PowerBeamCharged",1,"HoldFinal2");
        TNT1 A 0 A_JumpIfInventory("PowerBeamChargeLevel",25,"HoldFinal");
        TNT1 A 0 A_JumpIfInventory("PowerBeamChargeLevel",21,"Hold7");
        TNT1 A 0 A_JumpIfInventory("PowerBeamChargeLevel",17,"Hold6");
        TNT1 A 0 A_JumpIfInventory("PowerBeamChargeLevel",13,"Hold5");
        TNT1 A 0 A_JumpIfInventory("PowerBeamChargeLevel",9,"Hold4");
        TNT1 A 0 A_JumpIfInventory("PowerBeamChargeLevel",5,"Hold3");
        TNT1 A 0 A_JumpIfInventory("PowerBeamChargeLevel",1,"Hold2");
        TNT1 A 0 A_StartSound("pbeam/charge",5);
		TNT1 A 0 {
			A_Overlay(PSP_MDOChargeParticles, "MDOChargeParticles");
			A_OverlayScale(PSP_MDOChargeParticles, -0.1, -0.1, WOF_ADD);
			A_Overlay(PSP_MDOCharge, "MDOChargeHold2", true);
			A_OverlayScale(PSP_MDOCharge, -1.0, -1.0, WOF_ADD);
			}
      Hold2:
        TNT1 A 0 A_AttachLightDef("ChargeLight2","PowerChargedGlow");
        TNT1 A 0 A_JumpIfInventory("PowerBeamChargeLevel",25,"HoldFinal");
        TNT1 A 0 A_GiveInventory("PowerBeamChargeLevel",1);
        PBCU AB 1  {
			A_Overlay(PSP_MDOCharge, "MDOChargeHold2", true);
			A_OverlayPivotAlign(PSP_MDOCharge,PSPA_CENTER,PSPA_CENTER);
			A_OverlayRotate(PSP_MDOCharge, -0.10, WOF_ADD);
			A_OverlayAlpha(PSP_MDOCharge, 0.65);
			A_OverlayAlpha(PSP_MDOChargeParticles, 0.10);
			A_WeaponOffset(1, 53);
			A_OverlayOffset(PSP_MDOCharge, 203, 85);
			A_OverlayOffset(PSP_MDOChargeParticles, 205, 85);
			}
		TNT1 A 0 A_OverlayScale(PSP_MDOCharge, -0.02, -0.02, WOF_ADD);
        TNT1 A 0 A_Refire;
		Goto HoldFire;
	  
	  MDOChargeParticles:
		TNT1 A 0 {
			A_OverlayFlags(PSP_MDOChargeParticles, PSPF_RenderStyle|PSPF_ALPHA, true);
			A_OverlayRenderStyle(PSP_MDOChargeParticles, Style_Add);
			}
		PPT1 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 Bright;
		Loop;
	  
	  MDOChargeHold2:
		TNT1 A 0 {
			A_OverlayFlags(PSP_MDOCharge, PSPF_RenderStyle|PSPF_ALPHA, true);
			A_OverlayRenderStyle(PSP_MDOCharge, Style_Add);
			A_AttachLightDef("ChargeLight2","PowerChargedGlow");
			}
		TNT1 A 0 A_Jump(255, random(1,4));
		PBHC ABCDA 1 Bright;
		PBHC BCDAB 1 Bright;
		PBHC CDABC 1 Bright;
		PBHC DABCD 1 Bright;
		Loop;
		
	  MDOChargeHold3:
		TNT1 A 0 {
			A_OverlayFlags(PSP_MDOCharge, PSPF_RenderStyle|PSPF_ALPHA, true);
			A_OverlayRenderStyle(PSP_MDOCharge, Style_Add);
			A_AttachLightDef("ChargeLight3","PowerChargedGlow2");
			}
		TNT1 A 0 A_Jump(255, random(1,4));
		PBHC ABCDA 1 Bright;
		PBHC BCDAB 1 Bright;
		PBHC CDABC 1 Bright;
		PBHC DABCD 1 Bright;
		Loop;
		
	  MDOChargeHold4:
	    TNT1 A 0 {
			A_OverlayFlags(PSP_MDOCharge, PSPF_RenderStyle|PSPF_ALPHA, true);
			A_OverlayRenderStyle(PSP_MDOCharge, Style_Add);
			A_AttachLightDef("ChargeLight4","PowerChargedGlow3");
			}
		TNT1 A 0 A_Jump(255, random(1,4));
		PBHC ABCDA 1 Bright;
		PBHC BCDAB 1 Bright;
		PBHC CDABC 1 Bright;
		PBHC DABCD 1 Bright;
		Loop;
		
	  MDOChargeHold5:
		TNT1 A 0 {
			A_OverlayFlags(PSP_MDOCharge, PSPF_RenderStyle|PSPF_ALPHA, true);
			A_OverlayRenderStyle(PSP_MDOCharge, Style_Add);
			A_AttachLightDef("ChargeLight5","PowerChargedGlow4");
			}
		TNT1 A 0 A_Jump(255, random(1,4));
		PBHC ABCDA 1 Bright;
		PBHC BCDAB 1 Bright;
		PBHC CDABC 1 Bright;
		PBHC DABCD 1 Bright;
		Loop;
		
	  MDOChargeHold6:
		TNT1 A 0 {
			A_OverlayFlags(PSP_MDOCharge, PSPF_RenderStyle|PSPF_ALPHA, true);
			A_OverlayRenderStyle(PSP_MDOCharge, Style_Add);
			A_AttachLightDef("ChargeLight6","PowerChargedGlow5");
			}
		TNT1 A 0 A_Jump(255, random(1,4));
		PBHC ABCDA 1 Bright;
		PBHC BCDAB 1 Bright;
		PBHC CDABC 1 Bright;
		PBHC DABCD 1 Bright;
		Loop;
		
	  MDOChargeHold7:
	    TNT1 A 0 {
			A_OverlayFlags(PSP_MDOCharge, PSPF_RenderStyle|PSPF_ALPHA, true);
			A_OverlayRenderStyle(PSP_MDOCharge, Style_Add);
			A_AttachLightDef("ChargeLight7","PowerChargedGlow6");
			}
		TNT1 A 0 A_Jump(255, random(1,4));
		PBHC ABCDA 1 Bright;
		PBHC BCDAB 1 Bright;
		PBHC CDABC 1 Bright;
		PBHC DABCD 1 Bright;
		Loop;
		
      HoldFire:
        TNT1 A 0 {
			let psp = player.FindPSprite(PSP_MDOCharge);
			if (psp)
			{
				psp.Destroy();
				A_RemoveLight("ChargeLight2");
				A_RemoveLight("ChargeLight3");
				A_RemoveLight("ChargeLight4");
				A_RemoveLight("ChargeLight5");
				A_RemoveLight("ChargeLight6");
				A_RemoveLight("ChargeLight7");
			}
		}
		TNT1 A 0 A_PSPDestroy(PSP_MDOChargeParticles);
		TNT1 A 0 A_JumpIfInventory("PowerBeamHalfCharged",1,"HalfShotHoldFinish");
        TNT1 A 0 A_StartSound("silence",5);
        TNT1 A 0 A_StartSound("pbeam/fire", CHAN_WEAPON);
        TNT1 A 0 A_TakeInventory("PowerBeamChargeLevel",25);
		TNT1 A 0 A_TakeInventory("PowerBeamHalfCharged",1);
        TNT1 A 0 A_ClearRefire;
        TNT1 A 0 A_Recoil(0.05);
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"UnholdCoop");
        TNT1 A 0 A_FireProjectile("PowerBolt",random(-75,75)/100.00,0,0,12,0,random(-50,50)/100.00);
        Goto UnholdFinish;

      UnholdCoop:
        TNT1 A 0 A_FireProjectile("PowerBolt",random(20,200)/100.00,0,12,0,0,random(20,50)/100.00);
	  UnholdFinish:
		TNT1 A 0 {
			let psp = player.FindPSprite(PSP_MDOCharge);
			if (psp)
			{
				psp.Destroy();
				A_RemoveLight("ChargeLight2");
				A_RemoveLight("ChargeLight3");
				A_RemoveLight("ChargeLight4");
				A_RemoveLight("ChargeLight5");
				A_RemoveLight("ChargeLight6");
				A_RemoveLight("ChargeLight7");
			}
		}
		TNT1 A 0 A_PSPDestroy(PSP_MDOChargeParticles);
        TNT1 A 0 A_AlertMonsters;
        TNT1 A 0 A_Light1;
        PBFI A 1 {
			A_Overlay(PSP_MDOFlash, "MDOFlash");
			}
		PBFI B 1  {
			A_OverlayOffset(PSP_MDOFlash, 0, 2, WOF_ADD);
			A_WeaponOffset(0, 2, WOF_ADD);
			A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOSWITCH);
			}
        TNT1 A 0 A_Light0;
        PBFI C 1  {
			A_OverlayOffset(PSP_MDOFlash, 0, 6, WOF_ADD);
			A_WeaponOffset(0, 14, WOF_ADD);
			A_WeaponReady(WRF_NOSWITCH);
			}
        TNT1 A 0 A_Light0;
        PBFI D 1   {
			A_OverlayOffset(PSP_MDOFlash, 0, 1, WOF_ADD);
			A_WeaponOffset(0, 1, WOF_ADD);
			A_WeaponReady(WRF_NOSWITCH);
			}
        PBFI EDCBA 3 {
			A_WeaponOffset(0, -2, WOF_ADD);
			A_WeaponReady(WRF_NOSWITCH);
			}
        PBFI A 3 {
			A_WeaponOffset(0, 32, WOF_INTERPOLATE);
			A_WeaponReady(WRF_NOSWITCH);
			}
        Goto Ready;
		
	  Hold3:
		TNT1 A 0 A_AttachLightDef("ChargeLight3","PowerChargedGlow");
		TNT1 A 0 A_RemoveLight("ChargeLight2");
        TNT1 A 0 A_JumpIfInventory("PowerBeamChargeLevel",25,"HoldFinal");
        TNT1 A 0 A_GiveInventory("PowerBeamChargeLevel",1);
        PBCU CD 1  {
			A_Overlay(PSP_MDOCharge, "MDOChargeHold3", true);
			A_OverlayPivotAlign(PSP_MDOCharge,PSPA_CENTER,PSPA_CENTER);
			A_OverlayRotate(PSP_MDOCharge, -.10, WOF_ADD);
			A_OverlayAlpha(PSP_MDOCharge, 0.70);
			A_OverlayAlpha(PSP_MDOChargeParticles, 0.20);
			A_WeaponOffset(1, 54);
			A_OverlayOffset(PSP_MDOCharge, 202, 84);
			}
		TNT1 A 0 A_OverlayScale(PSP_MDOCharge, -0.03, -0.03, WOF_ADD);
		TNT1 A 0 A_Refire;
        Goto HoldFire;
	
	  Hold4:
		TNT1 A 0 A_AttachLightDef("ChargeLight4","PowerChargedGlow");
		TNT1 A 0 A_RemoveLight("ChargeLight3");
		TNT1 A 0 A_GiveInventory("PowerBeamHalfCharged",1);
        TNT1 A 0 A_JumpIfInventory("PowerBeamChargeLevel",25,"HoldFinal");
        TNT1 A 0 A_GiveInventory("PowerBeamChargeLevel",1);
        PBCU EF 1  {
			A_Overlay(PSP_MDOCharge, "MDOChargeHold4", true);
			A_OverlayPivotAlign(PSP_MDOCharge,PSPA_CENTER,PSPA_CENTER);
			A_OverlayRotate(PSP_MDOCharge, -0.10, WOF_ADD);
			A_OverlayAlpha(PSP_MDOCharge, 0.75);
			A_OverlayAlpha(PSP_MDOChargeParticles, 0.30);
			A_WeaponOffset(1, 55);
			A_OverlayOffset(PSP_MDOCharge, 201, 83);
			}
		TNT1 A 0 A_OverlayScale(PSP_MDOCharge, -0.04, -0.04, WOF_ADD);
		TNT1 A 0 A_Refire;
        Goto HoldFire;
		
	  Hold5:
		TNT1 A 0 A_AttachLightDef("ChargeLight5","PowerChargedGlow");
        TNT1 A 0 A_RemoveLight("ChargeLight4");
        TNT1 A 0 A_JumpIfInventory("PowerBeamChargeLevel",25,"HoldFinal");
        TNT1 A 0 A_GiveInventory("PowerBeamChargeLevel",1);
        PBCU GH 1  {
			A_Overlay(PSP_MDOCharge, "MDOChargeHold5", true);
			A_OverlayPivotAlign(PSP_MDOCharge,PSPA_CENTER,PSPA_CENTER);
			A_OverlayRotate(PSP_MDOCharge, -0.10, WOF_ADD);
			A_OverlayAlpha(PSP_MDOCharge, 0.80);
			A_OverlayAlpha(PSP_MDOChargeParticles, 0.40);
			A_WeaponOffset(2, 56);
			A_OverlayOffset(PSP_MDOCharge, 200, 82);
			}
		TNT1 A 0 A_OverlayScale(PSP_MDOCharge, -0.05, -0.05, WOF_ADD);
		TNT1 A 0 A_Refire;
        Goto HoldFire;

	  Hold6:
		TNT1 A 0 A_AttachLightDef("ChargeLight6","PowerChargedGlow");
        TNT1 A 0 A_RemoveLight("ChargeLight5");
        TNT1 A 0 A_JumpIfInventory("PowerBeamChargeLevel",25,"HoldFinal");
        TNT1 A 0 A_GiveInventory("PowerBeamChargeLevel",1);
        PBCU IJ 1  {
			A_Overlay(PSP_MDOCharge, "MDOChargeHold6", true);
			A_OverlayPivotAlign(PSP_MDOCharge,PSPA_CENTER,PSPA_CENTER);
			A_OverlayRotate(PSP_MDOCharge, -0.10, WOF_ADD);
			A_OverlayAlpha(PSP_MDOCharge, 0.85);
			A_OverlayAlpha(PSP_MDOChargeParticles, 0.50);
			A_WeaponOffset(2, 57);
			A_OverlayOffset(PSP_MDOCharge, 199, 81);
			}
		TNT1 A 0 A_Refire;
        Goto HoldFire;

	  Hold7:
		TNT1 A 0 A_AttachLightDef("ChargeLight7","PowerChargedGlow");
		TNT1 A 0 A_RemoveLight("ChargeLight6");
        TNT1 A 0 A_JumpIfInventory("PowerBeamChargeLevel",25,"HoldFinal");
        TNT1 A 0 A_GiveInventory("PowerBeamChargeLevel",1);
        PBCU IJ 1  {
			A_Overlay(PSP_MDOCharge, "MDOChargeHold7", true);
			A_OverlayPivotAlign(PSP_MDOCharge,PSPA_CENTER,PSPA_CENTER);
			A_OverlayRotate(PSP_MDOCharge, -0.10, WOF_ADD);
			A_OverlayAlpha(PSP_MDOCharge, 0.90);
			A_OverlayAlpha(PSP_MDOChargeParticles, 0.60);
			A_WeaponOffset(3, 58);
			A_OverlayOffset(PSP_MDOCharge, 198, 80);
			}
		TNT1 A 0 A_Refire;
        Goto HoldFire;

      HoldFinal:
        TNT1 A 0;
        TNT1 A 0 A_GiveInventory("PowerBeamCharged",1);
        TNT1 A 0 A_StartSound("pbeam/idle",7);
	  HoldFinal2:
        TNT1 A 0;
        TNT1 A 0 A_JumpIfInventory("SpeedBoosterActive",1,"D_RUNNIN");
        TNT1 A 0 A_JumpIfInventory("PowerBeamIdle",26,"HoldFinal3"); // The shit I do because A_StopSoundEx doesn't work online.
        TNT1 A 0 A_GiveInventory("PowerBeamIdle",1);
        PBCU IJ 1  {
			A_Overlay(PSP_MDOCharge, "MDOChargeHold7", true);
			A_OverlayPivotAlign(PSP_MDOCharge,PSPA_CENTER,PSPA_CENTER);
			A_OverlayRotate(PSP_MDOCharge, -0.10, WOF_ADD);
			A_OverlayAlpha(PSP_MDOCharge, 0.95);
			A_OverlayAlpha(PSP_MDOChargeParticles, 0.70);
			A_WeaponOffset(3, 58);
			A_OverlayOffset(PSP_MDOCharge, 198, 80);
			}
		TNT1 A 0 A_JumpIfInventory("PMSynthFireRight",1,"ChargeCombo");
		TNT1 A 0 TheSucc();
        TNT1 A 0 A_Refire;
	  HoldFinish:
		TNT1 A 0 {
			let psp = player.FindPSprite(PSP_MDOCharge);
			if (psp)
			{
				psp.Destroy();
				A_RemoveLight("ChargeLight2");
				A_RemoveLight("ChargeLight3");
				A_RemoveLight("ChargeLight4");
				A_RemoveLight("ChargeLight5");
				A_RemoveLight("ChargeLight6");
				A_RemoveLight("ChargeLight7");
			}
		}
		TNT1 A 0 A_PSPDestroy(PSP_MDOChargeParticles);
        TNT1 A 0 A_StartSound("silence",7);//A_StopSoundEx("soundslot7")
        TNT1 A 0 A_StartSound("pbeam/chfire", CHAN_WEAPON);
		TNT1 A 0 A_TakeInventory("PowerBeamHalfCharged",1);
        TNT1 A 0 A_TakeInventory("PowerBeamCharged",1);
        TNT1 A 0 A_TakeInventory("PowerBeamChargeLevel",25);
        TNT1 A 0 A_TakeInventory("PowerBeamIdle",34);
        TNT1 A 0 A_ClearRefire;
        TNT1 A 0 A_Recoil(2);
        TNT1 A 0 A_ZoomFactor(0.95,ZOOM_INSTANT);
        TNT1 A 0 Radius_Quake(4,8,0,1,0);
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"ChargedCoop");
        TNT1 A 0 A_FireProjectile("PowerBoltCharged",random(-75,75)/100.00,0,8,-2,0,random(-50,50)/100.00);
        Goto ChargedFinish;
		
	  HalfShotHoldFinish:
		TNT1 A 0 {
			let psp = player.FindPSprite(PSP_MDOCharge);
			if (psp)
			{
				psp.Destroy();
				A_RemoveLight("ChargeLight2");
				A_RemoveLight("ChargeLight3");
				A_RemoveLight("ChargeLight4");
				A_RemoveLight("ChargeLight5");
				A_RemoveLight("ChargeLight6");
				A_RemoveLight("ChargeLight7");
			}
		}
		TNT1 A 0 A_PSPDestroy(PSP_MDOChargeParticles);
		TNT1 A 0 A_StopSound(5);
        TNT1 A 0 A_StartSound("pbeam/fire", CHAN_WEAPON);
		TNT1 A 0 A_TakeInventory("PowerBeamHalfCharged",1);
        TNT1 A 0 A_TakeInventory("PowerBeamCharged",1);
        TNT1 A 0 A_TakeInventory("PowerBeamChargeLevel",25);
        TNT1 A 0 A_TakeInventory("PowerBeamIdle",34);
        TNT1 A 0 A_ClearRefire;
        TNT1 A 0 A_Recoil(2);
        TNT1 A 0 A_ZoomFactor(0.95,ZOOM_INSTANT);
        TNT1 A 0 Radius_Quake(1,8,0,1,0);
        //TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"ChargedCoop");
        TNT1 A 0 A_FireProjectile("PowerBoltHalfCharged",random(-75,75)/100.00,0,8,-2,0,random(-50,50)/100.00);
        Goto ChargedFinish;
		
      ChargedCoop:
        TNT1 A 0 A_FireProjectile("PowerBoltChargedCoop",random(-75,75)/100.00,0,8,-2,0,random(-50,50)/100.00);
	  ChargedFinish:
		TNT1 A 0 {
			let psp = player.FindPSprite(PSP_MDOCharge);
			if (psp)
			{
				psp.Destroy();
				A_RemoveLight("ChargeLight2");
				A_RemoveLight("ChargeLight3");
				A_RemoveLight("ChargeLight4");
				A_RemoveLight("ChargeLight5");
				A_RemoveLight("ChargeLight6");
				A_RemoveLight("ChargeLight7");
			}
		}
		TNT1 A 0 A_PSPDestroy(PSP_MDOChargeParticles);
        TNT1 A 0 A_AlertMonsters;
        TNT1 A 0 A_Light2;
        PBCF A 1  A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOSWITCH);
        TNT1 A 0 A_Light1;
        TNT1 A 0 A_ZoomFactor(0.975,ZOOM_INSTANT);
        PBCF B 1  A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOSWITCH);
        TNT1 A 0 A_Light0;
        TNT1 A 0 A_ZoomFactor(1.00,ZOOM_INSTANT);
        PBCF C 4  A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOSWITCH);
        PBCF DEFG 1 A_WeaponReady(WRF_NOSWITCH);
		PBCF G 3 A_WeaponReady(WRF_NOSWITCH);
        PBEM A 6 A_WeaponReady(WRF_NOSWITCH);
        Goto Ready;

      HoldFinal3:
        TNT1 A 0 A_TakeInventory("PowerBeamIdle",99);
        TNT1 A 0 A_StartSound("pbeam/idle",7);
		TNT1 A 0 TheSucc();
        Goto HoldFinal2;

	  Missile:
        TNT1 A 0 ACS_ExecuteWithResult(476, 0);
        TNT1 A 0 ACS_ExecuteWithResult(594, 29, 0, 1);
        TNT1 A 0 A_StartSound("missile/fire", CHAN_WEAPON);
		TNT1 A 0 A_StartSound("missile/disengage",CHAN_UI,0,1.0,ATTN_NORM);
        TNT1 A 0 A_AlertMonsters;
        TNT1 A 0 A_ZoomFactor(0.95,ZOOM_INSTANT);
        TNT1 A 0 A_Recoil(2);
        TNT1 A 0 Radius_Quake(1,8,0,1,0);
		TNT1 A 0 {
			invoker.missileCooldown = 100;
			}
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"Missile_Coop");
        Goto Missile_DM;

      Missile_DM:
        TNT1 A 0 A_FireProjectile("PowerMissile",0,1,8,-2,0,0);
        Goto MissileTransition;

      Missile_Coop:
        TNT1 A 0 A_FireProjectile("PowerMissile",0,1,8,-2,0,0);
        Goto MissileTransition;
	
	  MissileFromTrans:
		TNT1 A 0 A_StartSound("missile/disengage",CHAN_BODY,0,1.0,ATTN_NORM);
		MLFR ABC 2;
		MLFR DE 1;
		Goto Ready;
	
	  MissileTransition:
		TNT1 A 0 {
			invoker.missilesOn = true;
			}
		MLTO A 0 A_JumpIfInventory("IceBeamChilled", 1, "MissileAnim_Chilled");
        MLTO A 0 A_Light2;
        MLTO A 1 BRIGHT {
			A_Overlay(PSP_MDOFlash, "MDOFlash");
			A_WeaponOffset(0, 8, WOF_ADD);
			A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
			}
        MLTO B 0 A_Light1;
        MLTO B 0 A_ZoomFactor(0.975,ZOOM_INSTANT);
        MLTO B 1 BRIGHT {
			A_WeaponOffset(2, 20, WOF_ADD);
			A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
			}
        MLTO C 0 A_Light0;
        MLTO C 0 A_ZoomFactor(1.00,ZOOM_INSTANT);
        MLTO C 1 {
			A_WeaponOffset(0, 16, WOF_ADD);
			A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
			}
        MLTO D 1 {
			A_WeaponOffset(0, -2, WOF_ADD);
			A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
			}
		MLTO E 1 {
			A_WeaponOffset(0, 32, WOF_INTERPOLATE);
			A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
			}
		MLTO F 2 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
		MLTO GH 2 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
        Goto Ready;
		
	  MissileAnim:
        MLFI A 0 A_JumpIfInventory("IceBeamChilled", 1, "MissileAnim_Chilled");
        MLFI A 0 A_Light2;
        MLFI A 1 BRIGHT {
			A_Overlay(PSP_MDOFlash, "MDOFlash");
			A_WeaponOffset(0, 8, WOF_ADD);
			A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
			}
        MLFI B 0 A_Light1;
        MLFI B 0 A_ZoomFactor(0.975,ZOOM_INSTANT);
        MLFI B 1 BRIGHT {
			A_Overlay(PSP_MDOFlash, "MDOFlash");
			A_WeaponOffset(2, 20, WOF_ADD);
			A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
			}
        MLFI C 0 A_Light0;
        MLFI C 0 A_ZoomFactor(1.00,ZOOM_INSTANT);
        MLFI C 1 {
			A_Overlay(PSP_MDOFlash, "MDOFlash");
			A_WeaponOffset(0, 16, WOF_ADD);
			A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
			}
        MLFI D 1 {
			A_WeaponOffset(0, -2, WOF_ADD);
			A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
			}
		MLFI E 1 {
			A_WeaponOffset(0, 32, WOF_INTERPOLATE);
			A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
			}
		MLFI EEFFF 1 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
        MLFI GH 2 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
        Goto Ready;
		
	  MissileAnim_Chilled:
        TNT1 A 0 A_Light2;
        PBEM I 1 BRIGHT A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOSWITCH);
        TNT1 A 0 A_Light1;
        TNT1 A 0 A_ZoomFactor(0.975,ZOOM_INSTANT);
        PBEM J 2 BRIGHT A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOSWITCH);
        TNT1 A 0 A_Light0;
        TNT1 A 0 A_ZoomFactor(1.00,ZOOM_INSTANT);
        PBEM E 1 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOSWITCH);
        PBEM EEEFFFFEEEGGGHHHAAA 1 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOSWITCH);
        PBEM A 2 A_WeaponReady(WRF_NOSECONDARY|WRF_NOSWITCH);
        Goto Ready;

	  SuperMissile:
        TNT1 A 0 ACS_ExecuteWithResult(476, 0);
        TNT1 A 0 ACS_ExecuteWithResult(594, 29, 1, 1);
        TNT1 A 0 A_StartSound("supermissile/fire", CHAN_WEAPON);
		TNT1 A 0 A_StartSound("missile/disengage",CHAN_UI,0,1.0,ATTN_NORM);
        TNT1 A 0 A_AlertMonsters;
        TNT1 A 0 A_ZoomFactor(0.925,ZOOM_INSTANT);
        TNT1 A 0 A_Recoil(5);
        TNT1 A 0 Radius_Quake(2,8,0,1,0);
		TNT1 A 0 {
			invoker.missileCooldown = 100;
			}
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"SuperCoop");
        Goto SuperDM;

      SuperDM:
        TNT1 A 0 A_FireProjectile("SuperMissile",0,0,8,-2,0,0);
        Goto MissileTransition;

      SuperCoop:
        TNT1 A 0 A_FireProjectile("SuperMissile",0,0,8,-2,0,0);
        Goto MissileTransition;
		
	  SuperAnim:
        TNT1 A 0 {
        	A_SetAngle(angle+(random(-200,200)/100.00));
        	A_SetPitch(pitch-(random(300,500)/100.00));
        	}
		TNT1 A 0 A_AlertMonsters;
        TNT1 A 0 A_Light2;
        MLFI A 1 BRIGHT {
			A_Overlay(PSP_MDOFlash, "MDOFlash");
			A_WeaponOffset(0, 8, WOF_ADD);
			A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
			}
        MLFI B 0 A_Light1;
        MLFI B 0 A_ZoomFactor(0.975,ZOOM_INSTANT);
        MLFI B 1 BRIGHT {
			A_Overlay(PSP_MDOFlash, "MDOFlash");
			A_WeaponOffset(2, 20, WOF_ADD);
			A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
			}
        MLFI C 0 A_Light0;
        MLFI C 0 A_ZoomFactor(1.00,ZOOM_INSTANT);
        MLFI C 1 {
			A_Overlay(PSP_MDOFlash, "MDOFlash");
			A_WeaponOffset(0, 16, WOF_ADD);
			A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
			}
        MLFI D 1 {
			A_WeaponOffset(0, -2, WOF_ADD);
			A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
			}
		MLFI E 1 {
			A_WeaponOffset(0, 32, WOF_INTERPOLATE);
			A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
			}
		MLFI EEFFF 1 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
        MLFI GH 2 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
        Goto Ready;

// ======== MISSILE COMBO SHIT ========		
	  ChargeCombo:
	    TNT1 A 0 A_JumpIfInventory("PowerMissileAcquired",1,1);
        TNT1 A 0 A_JumpIfInventory("MissileAmmo",10,1);
        Goto HoldFinal2;
		
        TNT1 A 0 {
			A_PSPDestroy(PSP_MDOCharge);
			A_PSPDestroy(PSP_MDOChargeParticles);
			A_RemoveLight("ChargeLight2");
			A_RemoveLight("ChargeLight3");
			A_RemoveLight("ChargeLight4");
			A_RemoveLight("ChargeLight5");
			A_RemoveLight("ChargeLight6");
			A_RemoveLight("ChargeLight7");
		}
        PBCU J 10 BRIGHT A_StartSound("combo/ready",7);
        TNT1 A 0 A_StartSound("combo/power", CHAN_WEAPON);
        TNT1 A 0 A_TakeInventory("PowerBeamCharged",1);
        TNT1 A 0 A_TakeInventory("PowerBeamChargeLevel",25);
        TNT1 A 0 A_TakeInventory("PowerBeamIdle",34);
        TNT1 A 0 A_ClearRefire;
        TNT1 A 0 A_Recoil(5);
        TNT1 A 0 A_ZoomFactor(0.95,ZOOM_INSTANT);
        TNT1 A 0 Radius_Quake(2,8,0,1,0);
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"ComboCoop");
        TNT1 A 0 A_FireProjectile("PowerComboMissile",0,0,8,-2,0,0);
        Goto ComboFinish;

      ComboCoop:
		TNT1 A 0 A_WeaponOffset(0, 32);
		PBFI A 0 A_StartSound("combo/power", CHAN_WEAPON);
        TNT1 A 0 A_FireProjectile("PowerComboMissileSeeker",0,0,8,0,0,0);
		PBFI BC 2 A_WeaponOffset(0, 1, WOF_ADD);
		PBFI A 0 {
			A_WeaponOffset(0, -2, WOF_ADD);
			A_StartSound("combo/power", CHAN_WEAPON);
		}
        TNT1 A 0 A_FireProjectile("PowerComboMissileSeeker",0,0,8,0,0,0);
		PBFI BC 2 A_WeaponOffset(0, 1, WOF_ADD);
		PBFI A 0 {
			A_WeaponOffset(0, -2, WOF_ADD);
			A_StartSound("combo/power", CHAN_WEAPON);
		}
        TNT1 A 0 A_FireProjectile("PowerComboMissileSeeker",0,0,8,0,0,0);
		PBFI BC 2 A_WeaponOffset(0, 1, WOF_ADD);
		PBFI A 0 {
			A_WeaponOffset(0, -2, WOF_ADD);
			A_StartSound("combo/power", CHAN_WEAPON);
		}
        TNT1 A 0 A_FireProjectile("PowerComboMissileSeeker",0,0,8,0,0,0);
		PBFI BC 2 A_WeaponOffset(0, 1, WOF_ADD);
		PBFI A 0 {
			A_WeaponOffset(0, -2, WOF_ADD);
			A_StartSound("combo/power", CHAN_WEAPON);
		}
        TNT1 A 0 A_FireProjectile("PowerComboMissileSeeker",0,0,8,0,0,0);
		PBFI BC 2 A_WeaponOffset(0, 1, WOF_ADD);
		PBFI A 0 {
			A_WeaponOffset(0, -2, WOF_ADD);
			A_StartSound("combo/power", CHAN_WEAPON);
		}
        TNT1 A 0 A_FireProjectile("PowerComboMissileSeeker",0,0,8,0,0,0);
		PBFI BC 2 A_WeaponOffset(0, 1, WOF_ADD);
		PBFI A 0 {
			A_WeaponOffset(0, -2, WOF_ADD);
			A_StartSound("combo/power", CHAN_WEAPON);
		}
        TNT1 A 0 A_FireProjectile("PowerComboMissileSeeker",0,0,8,0,0,0);
		PBFI BC 2 A_WeaponOffset(0, 1, WOF_ADD);
		PBFI A 0 {
			A_WeaponOffset(0, -2, WOF_ADD);
			A_StartSound("combo/power", CHAN_WEAPON);
		}
        TNT1 A 0 A_FireProjectile("PowerComboMissileSeeker",0,0,8,0,0,0);
		PBFI BC 2 A_WeaponOffset(0, 1, WOF_ADD);
		PBFI A 0 {
			A_WeaponOffset(0, -2, WOF_ADD);
			A_StartSound("combo/power", CHAN_WEAPON);
		}
        TNT1 A 0 A_FireProjectile("PowerComboMissileSeeker",0,0,8,0,0,0);
		PBFI BC 2 A_WeaponOffset(0, 1, WOF_ADD);
		PBFI A 0 {
			A_WeaponOffset(0, -2, WOF_ADD);
			A_StartSound("combo/power", CHAN_WEAPON);
		}
        TNT1 A 0 A_FireProjectile("PowerComboMissileSeeker",0,0,8,0,0,0);
		PBFI BC 2 A_WeaponOffset(0, 1, WOF_ADD);
	  ComboFinish:
		TNT1 A 0 A_WeaponOffset(0, 32, WOF_INTERPOLATE);
        TNT1 A 0 A_TakeInventory("MissileAmmo",10);
        TNT1 A 0 A_SetAngle(angle+(random(-200,200)/100.00));
        TNT1 A 0 A_SetPitch(pitch-(random(300,500)/100.00));
        TNT1 A 0 A_AlertMonsters;
        TNT1 A 0 A_Light2;
        PBEM A 1 BRIGHT A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOSWITCH); //I;
        TNT1 A 0 A_Light1;
        TNT1 A 0 A_ZoomFactor(0.975,ZOOM_INSTANT);
        PBEM A 1 BRIGHT A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOSWITCH); //J;
        TNT1 A 0 A_Light0;
        TNT1 A 0 A_ZoomFactor(1.00,ZOOM_INSTANT);
        PBEM A 1 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOSWITCH);
        PBEM AAAAAAAAAAA 1 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_NOSWITCH);
        PBEM A 8 A_WeaponReady(WRF_NOSECONDARY|WRF_NOSWITCH);
        Goto Ready;
		
	  D_RUNNIN:
        PBEM A 0 ACS_ExecuteWithResult(476, 0);
        TNT1 A 0 A_TakeInventory("PowerBeamCharged",1);
        TNT1 A 0 A_TakeInventory("PowerBeamChargeLevel",25);
        TNT1 A 0 A_TakeInventory("PowerBeamIdle",34);
        TNT1 A 0 A_TakeInventory("MissileCharged",1);
        TNT1 A 0 A_TakeInventory("MissileChargeLevel",34);
		TNT1 A 0 {
			invoker.missileCooldown = 0; //Override missile transition timer since we're firing normally
			invoker.missilesOn = false;  //and don't need the animation to play
			A_PSPDestroy(PSP_MDOCharge);
			A_PSPDestroy(PSP_MDOChargeParticles);
			A_RemoveLight("ChargeLight2");
			A_RemoveLight("ChargeLight3");
			A_RemoveLight("ChargeLight4");
			A_RemoveLight("ChargeLight5");
			A_RemoveLight("ChargeLight6");
			A_RemoveLight("ChargeLight7");
		}	
        TNT1 A 0 A_ClearRefire;
        PBEM A 1 A_WeaponOffset(0,10.0,WOF_ADD);
        PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
        PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
        PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
	  IdleLoop:
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("ShinesparkCharge",1,"PreShine");
        TNT1 A 0 A_JumpIfInventory("SpeedBoosterActive",1,"IdleLoop");
        Goto BackToNormal;
		
	  PreShine:
		TNT1 A 0 {
			invoker.missileCooldown = 0; //Override missile transition timer since we're firing normally
			invoker.missilesOn = false;  //and don't need the animation to play
			}
		PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
        PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
        PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
        PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(0,32.0,WOF_ADD);
	  PreShine2:
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("ShinesparkCharge",1,"PreShine2");
		Goto Ready;
		
	  ShineBright:
		PBEM A 1 A_WeaponOffset(0,10.0,WOF_ADD);
        PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
        PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
        PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(0.1,10.0,WOF_ADD);
	  ShineLoop:
        TNT1 A 1;
		TNT1 A 0 A_JumpIfInventory("IsShinesparking",1,"ShineLoop");
		Goto BackToNormal;
		
	  BackToNormal:
		TNT1 A 0 {
			invoker.missileCooldown = 0; //Override missile transition timer since we're firing normally
			invoker.missilesOn = false;  //and don't need the animation to play
			}
		PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
        PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
        PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
        PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(-0.1,-10.0,WOF_ADD);
		PBEM A 1 A_WeaponOffset(0,32.0,WOF_ADD);
        Goto Ready;
    }
}

Class PowerBolt : FastProjectile
{
	Default
	{
		Radius 2;
		Height 2;
		Projectile;
		Speed 100;
		DamageFunction (3);
		Scale 0.75;
		RenderStyle "Add";
		Alpha 0.85;
		DeathSound "pbeam/hit";
		Damagetype "PowerBeam";
		Decal "DoomImpScorch";
		+NODAMAGETHRUST;
		+FORCEXYBILLBOARD;
	}
	
    States
    {
      Spawn:
        PBSH AABBCCDDEEFF 1 BRIGHT A_SpawnProjectile("PowerTrail",0,0,0);
        Loop;

      Death:
        TNT1 A 0;
        PBXP A 2 BRIGHT A_Scream;
        PBXP B 1 BRIGHT A_SpawnItemEx("PowerDeathExplode",0,0,0,random(-200,200)/100.00,random(-200,200)/100.00,random(-200,400)/100.00,random(-180,180),160,0);
		PBXP C 1 BRIGHT; //A_SpawnItemEx("PowerDeathExplode",0,0,0,random(-200,200)/100.00,random(-200,200)/100.00,random(-200,400)/100.00,random(-180,180),160,0);
		PBXP D 1 BRIGHT A_SpawnItemEx("PowerDeathExplode",0,0,0,random(-200,200)/100.00,random(-200,200)/100.00,random(-200,400)/100.00,random(-180,180),160,0);
		PBXP E 1 BRIGHT; //A_SpawnItemEx("PowerDeathExplode",0,0,0,random(-200,200)/100.00,random(-200,200)/100.00,random(-200,400)/100.00,random(-180,180),160,0);
		PBXP F 1 BRIGHT A_SpawnItemEx("PowerDeathExplode",0,0,0,random(-200,200)/100.00,random(-200,200)/100.00,random(-200,400)/100.00,random(-180,180),160,0);
        Stop;
    }
}

Class PowerBoltCoop : PowerBolt 
{ 
	Default
	{
		Damagetype "PowerBeam"; 
		DamageFunction (3); 
		Species "Player"; 
		+THRUSPECIES; 
	}
}

Class PowerTrail : Actor
{
	Default
	{
		Alpha 0.4;
		Scale 0.6;
		+NOINTERACTION;
		+CLIENTSIDEONLY;
		+FORCEXYBILLBOARD;
		RenderStyle "Add";
	}
	
    States
    {
      Spawn:
        TNT1 A 0;
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594,0,0,0) == 1,"Nope");
        PBSH ABC 1 BRIGHT A_SpawnProjectile("PowerSpark",0,0,Random(-180,180),2,Random(-100,100));
        PBSH DEF 1 BRIGHT;
        Stop;

      Nope:
        TNT1 A 1;
        Stop;
    }
}

Class PowerTrailSmall : PowerTrail 
{ 
	Default
	{
		Scale 0.35; 
	}
}

Class PowerSpark : Actor
{
	Default
	{
		Scale 0.065;
		Gravity 0.01;
		Speed 1;
		Renderstyle "Add";
		PROJECTILE;
		+NOTELEPORT;
		+EXPLODEONWATER;
		-CANBOUNCEWATER;
		+DONTSPLASH;
		-SOLID;
		-NOGRAVITY;
		+DOOMBOUNCE;
		+NOINTERACTION;
		+CLIENTSIDEONLY;
		+FORCEXYBILLBOARD;
	}
	
    States
    {
      Spawn:
        TNT1 A 0;
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594,0,0,0) == 1,"Nope");
        PBSH ABCDEF 1 BRIGHT A_FadeOut(0.03);
        Loop;

      Nope:
        TNT1 A 1;
        Stop;
    }
}

Class PowerDeathExplode : Actor
{
	Default
	{
		Scale 0.35;
		Gravity 0.01;
		Speed 1;
		Renderstyle "Add";
		PROJECTILE;
		+NOTELEPORT;
		+EXPLODEONWATER;
		-CANBOUNCEWATER;
		+DONTSPLASH;
		-SOLID;
		-NOGRAVITY;
		+DOOMBOUNCE;
		+NOINTERACTION;
		+CLIENTSIDEONLY;
		+FORCEXYBILLBOARD;
		+PAINLESS;
	}
	
    States
    {
      Spawn:
        TNT1 A 0;
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594,0,0,0) == 1,"Nope");
        PBXP A 1 BRIGHT A_Explode(random(1,2),128,0,64,0);
		PBXP B 1 BRIGHT; //A_SpawnItemEx("MissileExplosionSmall2",0,0,0,0,0,0,0,160);
		PBXP C 1 BRIGHT A_Explode(random(1,2),128,0,64,0);
		PBXP D 1 BRIGHT; //A_SpawnItemEx("MissileExplosionSmall2",0,0,0,0,0,0,0,160);
		PBXP E 1 BRIGHT A_Explode(random(1,2),128,0,64,0);
		PBXP F 1 BRIGHT;
        Stop;

      Nope:
        TNT1 A 1;
        Stop;
    }
}

Class PowerBoltCharged : PowerBolt
{
	Default
	{
		Radius 12;
		Height 8;
		Speed 75;
		DamageFunction (60);
		Scale 0.45;
		Alpha 0.95;
		DeathSound "pbeam/chhit";
		Damagetype "PowerCharged";
		Decal "Scorch";
		+FORCEXYBILLBOARD;
	}
	
    States
    {
      Spawn:
        PBCS AABB 1 BRIGHT A_SpawnProjectile("PowerTrailCharged",0,0,0);
        Loop;
		
      Death:
        TNT1 A 0;
        TNT1 A 0 A_Explode(80,112,0);
        TNT1 A 0 A_Scream;
        TNT1 A 0 A_SpawnItemEx("PowerBoltChargedExplosion",0,0,0,0,0,0,0,160,0);
        TNT1 A 1;
        Stop;
    }
}

Class PowerBoltChargedCoop : PowerBoltCharged
{
	Default
	{
		DamageFunction (60);
		Species "Player";
		Damagetype "PowerCharged";
		+THRUSPECIES;
		+FORCEXYBILLBOARD;
    }
	
	States
    {
      Death:
        TNT1 A 0;
        TNT1 A 0 A_Explode(128,128,0);
        TNT1 A 0 A_Scream;
        TNT1 A 0 A_SpawnItemEx("PowerBoltChargedExplosion",0,0,0,0,0,0,0,160,0);
        TNT1 A 1;
        Stop;
    }
}

Class PowerTrailCharged : Actor
{
	Default
	{
		Alpha 0.75;
		Scale 1.75;
		+NOINTERACTION;
		+CLIENTSIDEONLY;
		+FORCEXYBILLBOARD;
		RenderStyle "Add";
	}
	
    States
    {
      Spawn:
        TNT1 A 0;
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594,0,0,0) == 1,"Nope");
        PBSH ABCDEF 1 BRIGHT A_SpawnProjectile("PowerSparkCharged",0,0,Random(-180,180),2,Random(-100,100));
        Stop;

      Nope:
        TNT1 A 1;
        Stop;
    }
}

Class PowerBoltChargedExplosion : Actor
{
	Default
	{
		Radius 0;
		Height 0;
		+CLIENTSIDEONLY;
		+NOINTERACTION;
		+FORCEXYBILLBOARD;
		Renderstyle "Add";
		Alpha 0.95;
		Scale 0.55;
	}
	
    States
    {
      Spawn:
        PBCX BCDEFFGGHHIIJJKKLM 1 BRIGHT A_SpawnProjectile("PowerSparkCharged",0,0,Random(-180,180),2,Random(-100,100));
		TNT1 A 1;
        Stop;
    }
}

Class PowerSparkCharged : PowerSpark 
{ 
	Default
	{
		Scale 0.15; 
	}
}

// Half Shot Actors

Class PowerBoltHalfCharged : PowerBolt
{
	Default
	{
		Radius 12;
		Height 8;
		Speed 75;
		DamageFunction (30);
		Scale 0.35;
		Alpha 0.95;
		DeathSound "pbeam/chhit";
		Damagetype "PowerHalfCharged";
		Decal "Scorch";
		+FORCEXYBILLBOARD;
	}
	
    States
    {
      Spawn:
        PBHS AABB 1 BRIGHT A_SpawnProjectile("PowerTrailHalfCharged",0,0,0);
        Loop;

      Death:
        TNT1 A 0;
        TNT1 A 0 A_Explode(50,86,0);
        TNT1 A 0 A_Scream;
        TNT1 A 0 A_SpawnItemEx("PowerBoltHalfChargedExplosion",0,0,0,0,0,0,0,160,0);
        TNT1 A 1;
        Stop;
    }
}

Class PowerTrailHalfCharged : Actor
{
	Default
	{
		Alpha 0.75;
		Scale 1.05;
		+NOINTERACTION;
		+CLIENTSIDEONLY;
		+FORCEXYBILLBOARD;
		RenderStyle "Add";
	}
	
    States
    {
      Spawn:
        TNT1 A 0;
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594,0,0,0) == 1,"Nope");
        PBSH ABCDEF 1 BRIGHT A_SpawnProjectile("PowerSparkCharged",0,0,Random(-180,180),2,Random(-100,100));
        Stop;

      Nope:
        TNT1 A 1;
        Stop;
    }
}

Class PowerBoltHalfChargedExplosion : Actor
{
	Default
	{
		Radius 0;
		Height 0;
		+CLIENTSIDEONLY;
		+NOINTERACTION;
		+FORCEXYBILLBOARD;
		Renderstyle "Add";
		Alpha 0.95;
		Scale 0.35;
	}
	
    States
    {
      Spawn:
        PBCX BCDEFFGGHHIIJJKKLM 1 BRIGHT A_SpawnProjectile("PowerSparkCharged",0,0,Random(-180,180),2,Random(-100,100));
        Stop;
    }
}

// End of Half Shot actors

Class PowerBeamChargingSpawner1 : Actor
{
	Default
	{
		-SOLID;
		+NOINTERACTION;
		+CLIENTSIDEONLY;
		+NOTIMEFREEZE;
		Radius 0;
		Height 0;
		Speed 24;
	}
	
    States
    {
      Spawn:
        TNT1 A 0;
        TNT1 A 1;
        TNT1 A 0 A_SpawnItemEx("PowerBeamCharging1",-14,0,-3,0,0,0,-270,32);
        Stop;
    }
}

Class PowerBeamChargingSpawner2 : PowerBeamChargingSpawner1
{
    States
    {
      Spawn:
        TNT1 A 0;
        TNT1 A 1;
        TNT1 A 0 A_SpawnItemEx("PowerBeamCharging2",-14,0,-3,0,0,0,-270,32);
        Stop;
    }
}

Class PowerBeamChargingSpawner3 : PowerBeamChargingSpawner1
{
    States
    {
      Spawn:
        TNT1 A 0;
        TNT1 A 1;
        TNT1 A 0 A_SpawnItemEx("PowerBeamCharging3",-14,0,-3,0,0,0,-270,32);
        Stop;
    }
}

Class PowerBeamChargingSpawner4 : PowerBeamChargingSpawner1
{
    States
    {
      Spawn:
        TNT1 A 0;
        TNT1 A 1;
        TNT1 A 0 A_SpawnItemEx("PowerBeamCharging4",-14,0,-3,0,0,0,-270,32);
        Stop;
    }
}

Class PowerBeamChargingSpawner5 : PowerBeamChargingSpawner1
{
    States
    {
      Spawn:
        TNT1 A 0;
        TNT1 A 1;
        TNT1 A 0 A_SpawnItemEx("PowerBeamCharging5",-14,0,-3,0,0,0,-270,32);
        Stop;
    }
}

Class PowerBeamChargingSpawner6 : PowerBeamChargingSpawner1
{
    States
    {
      Spawn:
        TNT1 A 0;
        TNT1 A 1;
        TNT1 A 0 A_SpawnItemEx("PowerBeamCharging6",-14,0,-3,0,0,0,-270,32);
        Stop;
    }
}

Class PowerBeamChargingSpawner7 : PowerBeamChargingSpawner1
{
    States
    {
      Spawn:
        TNT1 A 0;
        TNT1 A 1;
        TNT1 A 0 A_SpawnItemEx("PowerBeamCharging7",-15,0,-3,0,0,0,-270,32);
        Stop;
    }
}

Class PowerBeamCharging1 : Actor
{
	Default
	{
		RenderStyle "Add";
		Alpha 0.75;
		Scale 0.07;
		+CLIENTSIDEONLY;
		+NOINTERACTION;
		+NOTIMEFREEZE;
		+ROLLSPRITE;
		+FORCEXYBILLBOARD;
	}
	
    States
    {
      Spawn:
        TNT1 A 0;
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594,0,0,0) == 1,"Simple");
        TNT1 A 0 A_Jump(256,"Spawn1","Spawn2","Spawn3","Spawn4");
        TNT1 A 1;
        Loop;

      Spawn1:
        PBCH ABCDA 1 bright A_FadeOut(0.15);
		PBCH A 1 bright A_Warp(AAPTR_MASTER,0,0,0,0,0,null,0,0,0);
        Stop;

      Spawn2:
        PBCH BCDAB 1 bright A_FadeOut(0.15);
		PBCH A 1 bright A_Warp(AAPTR_MASTER,0,0,0,0,0,null,0,0,0);
        Stop;

      Spawn3:
        PBCH CDABC 1 bright A_FadeOut(0.15);
		PBCH A 1 bright A_Warp(AAPTR_MASTER,0,0,0,0,0,null,0,0,0);
        Stop;

      Spawn4:
        PBCH DABCD 1 bright A_FadeOut(0.15);
		PBCH A 1 bright A_Warp(AAPTR_MASTER,0,0,0,0,0,null,0,0,0);
        Stop;

      Simple:
        TNT1 A 0;
        TNT1 A 0 A_Jump(256,"Spawn1B","Spawn2B","Spawn3B","Spawn4B");
        TNT1 A 1;
        Loop;

      Spawn1B:
        PBCH A 2 bright;
		PBCH A 1 bright A_Warp(AAPTR_MASTER,0,0,0,0,0,null,0,0,0);
        Stop;

      Spawn2B:
        PBCH B 2 bright;
		PBCH A 1 bright A_Warp(AAPTR_MASTER,0,0,0,0,0,null,0,0,0);
        Stop;

      Spawn3B:
        PBCH C 2 bright;
		PBCH A 1 bright A_Warp(AAPTR_MASTER,0,0,0,0,0,null,0,0,0);
        Stop;

      Spawn4B:
        PBCH D 2 bright;
		PBCH A 1 bright A_Warp(AAPTR_MASTER,0,0,0,0,0,null,0,0,0);
        Stop;
    }
}

Class PowerBeamCharging2 : PowerBeamCharging1 
{ 
	Default
	{
		Scale 0.08; 
		+FORCEXYBILLBOARD
	}
}

Class PowerBeamCharging3 : PowerBeamCharging1 
{
	Default
	{
		Scale 0.09; +FORCEXYBILLBOARD; 
	}
}

Class PowerBeamCharging4 : PowerBeamCharging1 
{ 
	Default
	{
		Scale 0.105; 
		+FORCEXYBILLBOARD;
	}
}

Class PowerBeamCharging5 : PowerBeamCharging1 
{
	Default
	{
		Scale 0.12; 
		+FORCEXYBILLBOARD; 
	}
}

Class PowerBeamCharging6 : PowerBeamCharging1 
{ 
	Default
	{
		Scale 0.135; 
		+FORCEXYBILLBOARD; 
	}
}

Class PowerBeamCharging7 : PowerBeamCharging1 
{
	Default
	{
		Scale 0.15;
		+FORCEXYBILLBOARD; 
	}
}